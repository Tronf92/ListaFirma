

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.TimerTask;
import javax.swing.Timer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Adi
 */
public class MainFrame extends javax.swing.JFrame {
    public Connection conn;
    public ResultSet rs;
   
    
    public MainFrame() throws SQLException {
        this.setTitle("Firme");
        File f = new File("lista.db");
        if (!f.exists()){
            create_db();
        }
        else{
            connect_to_db();
        }
        initComponents();
       
    }
    
    public void create_db() throws SQLException{
        String table = "CREATE TABLE FIRME"
                + "(ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ,"
                + "NUME CHAR(100) ,"
                + "ID_BURSA CHAR(100),"
                + "CUI CHAR(30),"
                + "REGCOMERT CHAR(30),"
                + "ADRESA CHAR(100));"+
      "CREATE TABLE CURSE"
                + "(ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT ,"
                + "NUME CHAR(100) ,"
                + "RUTA CHAR(100),"
                + "TERMEN_PLATA CHAR(100),"
                + "DATA_SCADENTA DATE,"
                + "INTARZIERE CHAR(100))";
        
        try {
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:lista.db");
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(table);


        } catch (ClassNotFoundException | SQLException ex) {
            conn.close();
            //file.delete();
            String err = ex.getMessage() + " " + ex.getCause() + " " + ex.getStackTrace();
            JOptionPane.showMessageDialog(null,err,"a",JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        } 

        connect_to_db();
        
    }
    public void connect_to_db(){
        try {
            Class.forName("org.sqlite.JDBC");
            conn = DriverManager.getConnection("jdbc:sqlite:lista.db");
            
        } catch (ClassNotFoundException | SQLException ex) {
           JOptionPane.showMessageDialog(null,ex.getMessage(),"",JOptionPane.ERROR_MESSAGE);
           System.exit(0);
        }
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TabFirme = new javax.swing.JTabbedPane();
        PanelFirme = new javax.swing.JPanel();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        JList = new javax.swing.JScrollPane();
        Lista = new javax.swing.JList();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        TabCurse = new javax.swing.JPanel();
        ListaCurse = new javax.swing.JScrollPane();
        ItemsCurse = new javax.swing.JList();
        CurseBtnAdd = new javax.swing.JToggleButton();
        CurseBtnDelete = new javax.swing.JToggleButton();
        CurseBtnView = new javax.swing.JToggleButton();
        CurseBtnEdit = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        FileQuit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnView.setText("Vizualizează");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Șterge");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Adaugă");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        GetFromDB();
        Lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JList.setViewportView(Lista);

        btnEdit.setText("Editează");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setText("Caută");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelFirmeLayout = new javax.swing.GroupLayout(PanelFirme);
        PanelFirme.setLayout(PanelFirmeLayout);
        PanelFirmeLayout.setHorizontalGroup(
            PanelFirmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFirmeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JList, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PanelFirmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelFirmeLayout.setVerticalGroup(
            PanelFirmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelFirmeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelFirmeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JList, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addGroup(PanelFirmeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        TabFirme.addTab("Firme", PanelFirme);

        curse_db();
        ListaCurse.setViewportView(ItemsCurse);

        CurseBtnAdd.setText("Adaugă");
        CurseBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurseBtnAddActionPerformed(evt);
            }
        });

        CurseBtnDelete.setText("Șterge");
        CurseBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurseBtnDeleteActionPerformed(evt);
            }
        });

        CurseBtnView.setText("Vizualizează");
        CurseBtnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurseBtnViewActionPerformed(evt);
            }
        });

        CurseBtnEdit.setText("Editează");
        CurseBtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurseBtnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabCurseLayout = new javax.swing.GroupLayout(TabCurse);
        TabCurse.setLayout(TabCurseLayout);
        TabCurseLayout.setHorizontalGroup(
            TabCurseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabCurseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ListaCurse, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(TabCurseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CurseBtnView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CurseBtnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CurseBtnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CurseBtnEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        TabCurseLayout.setVerticalGroup(
            TabCurseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabCurseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabCurseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabCurseLayout.createSequentialGroup()
                        .addComponent(CurseBtnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurseBtnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurseBtnView)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurseBtnEdit))
                    .addComponent(ListaCurse, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabFirme.addTab("Curse", TabCurse);

        File.setText("File");

        FileQuit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        FileQuit.setText("Quit");
        FileQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileQuitActionPerformed(evt);
            }
        });
        File.add(FileQuit);

        MenuBar.add(File);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabFirme)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabFirme)
        );

        getAccessibleContext().setAccessibleName("MainFrame");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void curse_db(){
        String sql = "SELECT * from CURSE";
        try{
            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            try{
                DefaultListModel model = new DefaultListModel();
                while(rs.next()){
                    model.addElement(rs.getString("NUME"));
                }
                ItemsCurse.setModel(model);
            }
            catch (NullPointerException er){
                
            }
        }
        catch (SQLException err){
            JOptionPane.showMessageDialog(null,"S-a produs o eroare","Eroare",JOptionPane.ERROR_MESSAGE);
        }
        
    }
    public void GetFromDB(){
        DefaultListModel model = new DefaultListModel();
        String sql = "Select * from FIRME";
        String name = "nume";
        try {
            Statement stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Eroare",JOptionPane.ERROR_MESSAGE);
            
        }
        catch (NullPointerException ex){
        }
        try {
            while(rs.next()){
                name = rs.getString("NUME");
                model.addElement(name);
            }
        } catch (SQLException | NullPointerException ex) {
            
        }
        try{
            Lista.setModel(model);
        }
        catch (NullPointerException ex){
            DefaultListModel temp = new DefaultListModel();
            String tmp = "Baza de date goala!";
            temp.addElement(tmp);
            System.out.println(temp);
            Lista.setModel(temp);
        }
    }
    
    private void FileQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_FileQuitActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
       JFrame add = new AddFrame(this);
       add.show();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try{
            String id = Lista.getSelectedValue().toString();
            String sql = "DELETE FROM FIRME where nume='" + id + "'";
            Statement delete = null;
            try {
                delete = conn.createStatement();
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                delete.executeUpdate(sql);
                GetFromDB();
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        try{
            String id = Lista.getSelectedValue().toString();
            JFrame view = new ViewFrame(id);
            view.show();
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","Eroare",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void CurseBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurseBtnAddActionPerformed
        JFrame cr = new AddCurseFrame(this);
        cr.show();
    }//GEN-LAST:event_CurseBtnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String id = "";
        try{
            id = Lista.getSelectedValue().toString();
            JFrame edit = new EditFrame(this,id);
            edit.show();
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","",JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btnEditActionPerformed

    private void CurseBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurseBtnDeleteActionPerformed
        String id = "";
        try{
            id = ItemsCurse.getSelectedValue().toString();
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","",JOptionPane.ERROR_MESSAGE);
        }
        String sql = "DELETE FROM CURSE where NUME='" + id + "'";
        try{
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(sql);
        }
        catch (SQLException ex){
        }
        curse_db();
    }//GEN-LAST:event_CurseBtnDeleteActionPerformed

    private void CurseBtnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurseBtnViewActionPerformed
        String id = "";
        try{
            id = ItemsCurse.getSelectedValue().toString();
            JFrame viewC = new ViewCurseFrame(id);
            viewC.show();
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CurseBtnViewActionPerformed

    private void CurseBtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurseBtnEditActionPerformed
        String id = "";
        try{
            id = ItemsCurse.getSelectedValue().toString();
            JFrame editC = new EditCurseFrame(this,id);
            editC.show();
        }
        catch (NullPointerException ex){
            JOptionPane.showMessageDialog(null,"Nici un element selectat!","",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_CurseBtnEditActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        JFrame search = new SearchFrame();
        search.show();
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null,"S-a produs o eroare","Eroare",JOptionPane.ERROR_MESSAGE);
                    System.exit(0);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton CurseBtnAdd;
    private javax.swing.JToggleButton CurseBtnDelete;
    private javax.swing.JButton CurseBtnEdit;
    private javax.swing.JToggleButton CurseBtnView;
    private javax.swing.JMenu File;
    private javax.swing.JMenuItem FileQuit;
    private javax.swing.JList ItemsCurse;
    private javax.swing.JScrollPane JList;
    private javax.swing.JList Lista;
    private javax.swing.JScrollPane ListaCurse;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel PanelFirme;
    private javax.swing.JPanel TabCurse;
    private javax.swing.JTabbedPane TabFirme;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    // End of variables declaration//GEN-END:variables

   
}
